/// <reference types="node" />
import * as Stream from "stream";
import { FileTokenizer } from './FileTokenizer';
import { ReadStreamTokenizer } from './ReadStreamTokenizer';
import * as core from './core';
/**
 * Construct ReadStreamTokenizer from given file path.
 * @param filePath
 * @returns {Promise<FileTokenizer>}
 */
export declare function fromFile(filePath: string): Promise<FileTokenizer>;
/**
 * Construct ReadStreamTokenizer from given Stream.
 * Will set fileSize, if provided given Stream has set the .path property.
 * @param stream Stream.Readable
 * @returns {Promise<ReadStreamTokenizer>}
 */
export declare function fromStream(stream: Stream.Readable): Promise<ReadStreamTokenizer>;
/**
 * Construct ReadStreamTokenizer from given Buffer.
 * @param buffer Buffer to tokenize
 * @returns BufferTokenizer
 */
export declare const fromBuffer: typeof core.fromBuffer;
